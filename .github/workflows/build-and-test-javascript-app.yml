name: Build and Test a Javascript App

on:
  workflow_call:
    inputs:
      node-version:
        required: true
        type: string
        description: The version of Node to use (e.g. '18.x')
      upload-artifact:
        required: false
        type: boolean
        description: Whether an artefact should be uploaded or not
        default: false
      artifact-path:
        required: false
        type: string
        description: Location of the build output
        default: "./build"
      artifact-name:
        required: false
        type: string
        description: The name of the artifact
        default: javascript-app-artifact
    outputs:
      # artifact-uploaded:
      #   value: ${{ jobs.build-app-and-test.set-artifact-uploaded-status.is-uploaded }}
      #   description: Flag to determine if artifact was uploaded or not
      my-var:
        value: ${{ jobs.set-var.set-output-var.outputs.my-var }}
        description: Value of my var

jobs:
  set-var:
    runs-on: ubuntu-latest
    name: Set a variable
    outputs:
      my-var: ${{ steps.set-output-var.outputs.my-var }}
    steps:
      - name: Set an output var
        id: set-output-var
        run: echo "my-var=123" >> $GITHUB_OUTPUT

      - name: Show output var
        run: |
          echo "Result: ${{ steps.set-output-var.outputs.my-var }}"

# jobs:
#   build-app-and-test:
#     runs-on: ubuntu-latest
#     name: Build and Test for Node version ${{ inputs.node-version   }}

#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v4

#       - name: Set-Up Node Environment
#         uses: actions/setup-node@v4.0.2
#         with:
#           node-version: ${{ inputs.node-version }}
#           cache: npm

#       - name: Build App
#         run: |
#           npm i
#           npm run build

#       - name: Run Tests
#         run: |
#           npm run test

#       - name: Upload Artifact for Node version ${{ inputs.node-version }}
#         uses: actions/upload-artifact@v4.3.1
#         if: ${{ inputs.upload-artifact }}
#         with:
#           name: ${{ inputs.artifact-name }}
#           path: ${{ inputs.artifact-path }}
#           if-no-files-found: error

#       - name: Set Artifact Flag
#         id: set-artifact-uploaded-status
#         if: ${{ inputs.upload-artifact && success() }}
#         run: |
#           echo "is-uploaded=true" >> $GITHUB_OUTPUT
